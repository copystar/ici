// Generated by CoffeeScript 1.5.0
(function() {
  var checkImages, display, getImages, locate, pageSize, refreshRate, seen,
    _this = this;

  pageSize = 25;

  refreshRate = 60 * 1000;

  seen = {};

  jQuery(function() {
    var $;
    $ = jQuery;
    return locate();
  });

  locate = function() {
    console.log("looking up coordinates");
    if (Modernizr.geolocation) {
      navigator.geolocation.getCurrentPosition(function(pos) {
        var lat, lon;
        lat = parseInt(pos.coords.latitude * 10000) / 10000;
        lon = parseInt(pos.coords.longitude * 10000) / 10000;
        $.bbq.pushState({
          lat: lat,
          lon: lon
        });
        return display();
      });
    }
    return setTimeout(locate, refreshRate);
  };

  display = function() {
    var lat, lon, url;
    lat = $.bbq.getState('lat');
    lon = $.bbq.getState('lon');
    if (seen["" + lat + ":" + lon]) {
      return;
    }
    seen["" + lat + ":" + lon] = true;
    url = ("http://api.geonames.org/findNearbyWikipediaJSON?lat=" + lat + "&lng=" + lon + "&radius=10&username=wikimedia&maxRows=") + pageSize;
    console.log(url);
    return $.ajax({
      url: url,
      dataType: "jsonp",
      jsonpCallback: 'articles'
    });
  };

  this.articles = function(geo) {
    var article, ul, url, _i, _len, _ref;
    ul = $("#results");
    _ref = geo.geonames;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      article = _ref[_i];
      url = "http://" + article.wikipediaUrl;
      if ($("a[href='" + url + "']").length === 1) {
        continue;
      }
      ul.prepend($("<li><a class='title' href='" + url + "'>" + article.title + "</a><span class='summary hidden-phone'>: " + article.summary + "</span></li>").hide());
    }
    return checkImages();
  };

  checkImages = function() {
    return $("#results li").each(function(i, li) {
      var title;
      if ($(li).data('checked')) {
        return;
      }
      title = $(this).find("a").text();
      return getImages(title, function(images) {
        if (images.length === 0) {
          $(li).addClass("needImage");
        }
        return $(li).data("checked", true).slideDown();
      });
    });
  };

  getImages = function(title, callback) {
    var url;
    url = "http://en.wikipedia.org/w/api.php?action=query&prop=images&format=json&titles=" + title + "&callback=?&imlimit=500";
    return $.getJSON(url, function(data) {
      var images, page, pageId, _ref;
      images = [];
      _ref = data.query.pages;
      for (pageId in _ref) {
        page = _ref[pageId];
        if (page.images != null) {
          images = page.images;
        }
        break;
      }
      return callback(images);
    });
  };

}).call(this);
