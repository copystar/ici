// Generated by CoffeeScript 1.5.0
(function() {
  var init, location;

  jQuery(function() {
    var $;
    $ = jQuery;
    return init();
  });

  init = function() {
    if (Modernizr.geolocation) {
      return navigator.geolocation.getCurrentPosition(location);
    } else {
      return console.log("no geo :-(");
    }
  };

  location = function(position) {
    var lat, lon, url;
    lat = parseFloat(position.coords.latitude);
    lon = parseFloat(position.coords.longitude);
    url = "http://api.geonames.org/findNearbyWikipediaJSON?lat=" + lat + "&lng=" + lon + "&radius=10&username=wikimedia&maxRows=20";
    return $.ajax({
      url: url,
      dataType: "jsonp",
      jsonpCallback: 'articles'
    });
  };

  this.articles = function(results) {
    var article, titles, url;
    console.log(results);
    titles = ((function() {
      var _i, _len, _ref, _results;
      _ref = results.geonames;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        article = _ref[_i];
        _results.push(article.title);
      }
      return _results;
    })()).join("|");
    url = "http://en.wikipedia.org/w/api.php?action=query&prop=images&format=json&titles=" + titles;
    return $.ajax({
      url: url,
      dataType: "jsonp",
      jsonpCallback: 'images'
    });
  };

  this.images = function(results) {
    var dl, dt, page, pageId, _ref, _results;
    console.log(results);
    dl = $("#results");
    _ref = results.query.pages;
    _results = [];
    for (pageId in _ref) {
      page = _ref[pageId];
      dt = $("<dt>" + page.title + "</dt>");
      if (!page.images) {
        dt.addClass("needImage");
      }
      _results.push(dl.append(dt));
    }
    return _results;
  };

}).call(this);
